/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from 'ethers';
import { Provider, TransactionRequest } from '@ethersproject/providers';
import type { ApeRegistry, ApeRegistryInterface } from '../ApeRegistry';

const _abi = [
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_minDelay',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'id',
        type: 'bytes32',
      },
    ],
    name: 'CallCancelled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'id',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
    ],
    name: 'CallExecuted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'id',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'target',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'bytes',
        name: 'data',
        type: 'bytes',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'predecessor',
        type: 'bytes32',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'delay',
        type: 'uint256',
      },
    ],
    name: 'CallScheduled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_id',
        type: 'bytes32',
      },
    ],
    name: 'cancel',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_min',
        type: 'uint256',
      },
    ],
    name: 'changeMinDelay',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'distributor',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_target',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
      {
        internalType: 'bytes32',
        name: '_predecessor',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: '_salt',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: '_delay',
        type: 'uint256',
      },
    ],
    name: 'execute',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'factory',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'feeRegistry',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_id',
        type: 'bytes32',
      },
    ],
    name: 'isDoneCall',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_id',
        type: 'bytes32',
      },
    ],
    name: 'isPendingCall',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_id',
        type: 'bytes32',
      },
    ],
    name: 'isReadyCall',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'minDelay',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'router',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_target',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_data',
        type: 'bytes',
      },
      {
        internalType: 'bytes32',
        name: '_predecessor',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: '_salt',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: '_delay',
        type: 'uint256',
      },
    ],
    name: 'schedule',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_distributor',
        type: 'address',
      },
    ],
    name: 'setDistributor',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_factory',
        type: 'address',
      },
    ],
    name: 'setFactory',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_registry',
        type: 'address',
      },
    ],
    name: 'setFeeRegistry',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_router',
        type: 'address',
      },
    ],
    name: 'setRouter',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '_treasury',
        type: 'address',
      },
    ],
    name: 'setTreasury',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    name: 'timestamps',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'treasury',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060405162001ccd38038062001ccd83398181016040528101906200003791906200014a565b80620000586200004c6200006760201b60201c565b6200006f60201b60201c565b8060028190555050506200019a565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001448162000180565b92915050565b6000602082840312156200015d57600080fd5b60006200016d8482850162000133565b91505092915050565b6000819050919050565b6200018b8162000176565b81146200019757600080fd5b50565b611b2380620001aa6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063acdad7d0116100b8578063c45a01551161007c578063c45a01551461034d578063c4d252f51461036b578063c63c4e9b14610387578063f0f44260146103a5578063f2fde38b146103c1578063f887ea40146103dd57610142565b8063acdad7d0146102a9578063b3a408b8146102c5578063b5872958146102e3578063bfe1092814610313578063c0d786551461033157610142565b806361d027b31161010a57806361d027b31461020f578063715018a61461022d57806375619ab5146102375780638da5cb5b146102535780639749b36814610271578063abeb69971461028d57610142565b80631333cdda146101475780632a9eda11146101775780632c5eaf21146101a75780634c84c5a1146101c35780635bb47808146101f3575b600080fd5b610161600480360381019061015c919061125b565b6103fb565b60405161016e919061159b565b60405180910390f35b610191600480360381019061018c919061125b565b61041b565b60405161019e919061159b565b60405180910390f35b6101c160048036038101906101bc91906111c9565b61043a565b005b6101dd60048036038101906101d8919061125b565b6105d0565b6040516101ea919061159b565b60405180910390f35b61020d600480360381019061020891906111a0565b6105ef565b005b6102176106a1565b60405161022491906114b2565b60405180910390f35b6102356106c7565b005b610251600480360381019061024c91906111a0565b61074f565b005b61025b610801565b60405161026891906114b2565b60405180910390f35b61028b60048036038101906102869190611284565b61082a565b005b6102a760048036038101906102a291906111c9565b6108a2565b005b6102c360048036038101906102be91906111a0565b610a42565b005b6102cd610af4565b6040516102da91906114b2565b60405180910390f35b6102fd60048036038101906102f8919061125b565b610b1a565b60405161030a9190611711565b60405180910390f35b61031b610b32565b60405161032891906114b2565b60405180910390f35b61034b600480360381019061034691906111a0565b610b58565b005b610355610c0a565b60405161036291906114b2565b60405180910390f35b6103856004803603810190610380919061125b565b610c30565b005b61038f610d47565b60405161039c9190611711565b60405180910390f35b6103bf60048036038101906103ba91906111a0565b610d4d565b005b6103db60048036038101906103d691906111a0565b610dff565b005b6103e5610ef7565b6040516103f291906114b2565b60405180910390f35b600042600160008481526020019081526020016000205411159050919050565b6000600180600084815260200190815260200160002054149050919050565b610442610f1d565b73ffffffffffffffffffffffffffffffffffffffff16610460610801565b73ffffffffffffffffffffffffffffffffffffffff16146104b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ad90611651565b60405180910390fd5b60006104c58787878787610f25565b9050600060016000838152602001908152602001600020541461051d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610514906116f1565b60405180910390fd5b600254821015610562576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055990611691565b60405180910390fd5b600254426105709190611759565b6001600083815260200190815260200160002081905550807f66dcc96f6c92c7919714879a908fc29b273e363ba3d409c0c6db86984ee3c48088888888876040516105bf95949392919061154d565b60405180910390a250505050505050565b6000600180600084815260200190815260200160002054119050919050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065490611611565b60405180910390fd5b80600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106cf610f1d565b73ffffffffffffffffffffffffffffffffffffffff166106ed610801565b73ffffffffffffffffffffffffffffffffffffffff1614610743576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073a90611651565b60405180910390fd5b61074d6000610f61565b565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b490611611565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610898576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088f90611611565b60405180910390fd5b8060028190555050565b6108aa610f1d565b73ffffffffffffffffffffffffffffffffffffffff166108c8610801565b73ffffffffffffffffffffffffffffffffffffffff161461091e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091590611651565b60405180910390fd5b600061092d8787878787610f25565b9050610938816103fb565b610977576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096e90611631565b60405180910390fd5b6109808161041b565b156109c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b7906116b1565b60405180910390fd5b6000801b8414806109d657506109d58461041b565b5b610a15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0c906115f1565b60405180910390fd5b610a2181888888611025565b60018060008381526020019081526020016000208190555050505050505050565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ab0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa790611611565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090505481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bc6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbd90611611565b60405180910390fd5b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c38610f1d565b73ffffffffffffffffffffffffffffffffffffffff16610c56610801565b73ffffffffffffffffffffffffffffffffffffffff1614610cac576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca390611651565b60405180910390fd5b610cb5816105d0565b610cf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ceb906116d1565b60405180910390fd5b600060016000838152602001908152602001600020819055507fab2af3494bc00bd4aa34e08bd246e5c402d3ee4856c19f5461ce47a6d57423e181604051610d3c91906115b6565b60405180910390a150565b60025481565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dbb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db290611611565b60405180910390fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610e07610f1d565b73ffffffffffffffffffffffffffffffffffffffff16610e25610801565b73ffffffffffffffffffffffffffffffffffffffff1614610e7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7290611651565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610eeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee2906115d1565b60405180910390fd5b610ef481610f61565b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b60008585858585604051602001610f409594939291906114ff565b60405160208183030381529060405280519060200120905095945050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008373ffffffffffffffffffffffffffffffffffffffff16838360405161104e929190611499565b6000604051808303816000865af19150503d806000811461108b576040519150601f19603f3d011682016040523d82523d6000602084013e611090565b606091505b50509050806110d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110cb90611671565b60405180910390fd5b847fc08872e260006100fd2e00a3ba4c617fdb250f802f99384d55c10097dc1d0487858585604051611108939291906114cd565b60405180910390a25050505050565b60008135905061112681611aa8565b92915050565b60008135905061113b81611abf565b92915050565b60008083601f84011261115357600080fd5b8235905067ffffffffffffffff81111561116c57600080fd5b60208301915083600182028301111561118457600080fd5b9250929050565b60008135905061119a81611ad6565b92915050565b6000602082840312156111b257600080fd5b60006111c084828501611117565b91505092915050565b60008060008060008060a087890312156111e257600080fd5b60006111f089828a01611117565b965050602087013567ffffffffffffffff81111561120d57600080fd5b61121989828a01611141565b9550955050604061122c89828a0161112c565b935050606061123d89828a0161112c565b925050608061124e89828a0161118b565b9150509295509295509295565b60006020828403121561126d57600080fd5b600061127b8482850161112c565b91505092915050565b60006020828403121561129657600080fd5b60006112a48482850161118b565b91505092915050565b6112b6816117af565b82525050565b6112c5816117c1565b82525050565b6112d4816117cd565b82525050565b60006112e6838561172c565b93506112f3838584611801565b6112fc8361183f565b840190509392505050565b6000611313838561173d565b9350611320838584611801565b82840190509392505050565b6000611339602683611748565b915061134482611850565b604082019050919050565b600061135c602783611748565b91506113678261189f565b604082019050919050565b600061137f602783611748565b915061138a826118ee565b604082019050919050565b60006113a2602183611748565b91506113ad8261193d565b604082019050919050565b60006113c5602083611748565b91506113d08261198c565b602082019050919050565b60006113e8602983611748565b91506113f3826119b5565b604082019050919050565b600061140b601c83611748565b915061141682611a04565b602082019050919050565b600061142e601a83611748565b915061143982611a2d565b602082019050919050565b6000611451601d83611748565b915061145c82611a56565b602082019050919050565b6000611474602083611748565b915061147f82611a7f565b602082019050919050565b611493816117f7565b82525050565b60006114a6828486611307565b91508190509392505050565b60006020820190506114c760008301846112ad565b92915050565b60006040820190506114e260008301866112ad565b81810360208301526114f58184866112da565b9050949350505050565b600060808201905061151460008301886112ad565b81810360208301526115278186886112da565b905061153660408301856112cb565b61154360608301846112cb565b9695505050505050565b600060808201905061156260008301886112ad565b81810360208301526115758186886112da565b905061158460408301856112cb565b611591606083018461148a565b9695505050505050565b60006020820190506115b060008301846112bc565b92915050565b60006020820190506115cb60008301846112cb565b92915050565b600060208201905081810360008301526115ea8161132c565b9050919050565b6000602082019050818103600083015261160a8161134f565b9050919050565b6000602082019050818103600083015261162a81611372565b9050919050565b6000602082019050818103600083015261164a81611395565b9050919050565b6000602082019050818103600083015261166a816113b8565b9050919050565b6000602082019050818103600083015261168a816113db565b9050919050565b600060208201905081810360008301526116aa816113fe565b9050919050565b600060208201905081810360008301526116ca81611421565b9050919050565b600060208201905081810360008301526116ea81611444565b9050919050565b6000602082019050818103600083015261170a81611467565b9050919050565b6000602082019050611726600083018461148a565b92915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000611764826117f7565b915061176f836117f7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156117a4576117a3611810565b5b828201905092915050565b60006117ba826117d7565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f54696d654c6f636b3a205072656465636573736f722063616c6c206e6f74206560008201527f7865637574656400000000000000000000000000000000000000000000000000602082015250565b7f54696d654c6f636b3a2043616c6c6572206973206e6f7420636f6e747261637460008201527f20697473656c6600000000000000000000000000000000000000000000000000602082015250565b7f54696d654c6f636b3a204e6f7420726561647920666f7220657865637574696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f54696d656c6f636b3a20756e6465726c79696e67207472616e73616374696f6e60008201527f2072657665727465640000000000000000000000000000000000000000000000602082015250565b7f54696d654c6f636b3a20496e73756666696369656e742064656c617900000000600082015250565b7f54696d654c6f636b3a20416c7265616479206578656375746564000000000000600082015250565b7f54696d654c6f636b3a2043616c6c206973206e6f742070656e64696e67000000600082015250565b7f54696d654c6f636b3a2043616c6c20616c7265616479207363686564756c6564600082015250565b611ab1816117af565b8114611abc57600080fd5b50565b611ac8816117cd565b8114611ad357600080fd5b50565b611adf816117f7565b8114611aea57600080fd5b5056fea26469706673582212207920019f951e8f3aff7b517b97f0d2f4fa531fd6734d53b1951a26ebc9eb103264736f6c63430008020033';

export class ApeRegistry__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _minDelay: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ApeRegistry> {
    return super.deploy(_minDelay, overrides || {}) as Promise<ApeRegistry>;
  }
  getDeployTransaction(
    _minDelay: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_minDelay, overrides || {});
  }
  attach(address: string): ApeRegistry {
    return super.attach(address) as ApeRegistry;
  }
  connect(signer: Signer): ApeRegistry__factory {
    return super.connect(signer) as ApeRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ApeRegistryInterface {
    return new utils.Interface(_abi) as ApeRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ApeRegistry {
    return new Contract(address, _abi, signerOrProvider) as ApeRegistry;
  }
}
