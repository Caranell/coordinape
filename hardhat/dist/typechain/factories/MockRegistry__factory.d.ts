import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockRegistry, MockRegistryInterface } from "../MockRegistry";
export declare class MockRegistry__factory extends ContractFactory {
    constructor(...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<MockRegistry>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): MockRegistry;
    connect(signer: Signer): MockRegistry__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506105b9806100606000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80635aa6e6751461005c5780637bbfc69e1461007a578063e177dc70146100aa578063ec3a7823146100da578063f9c7bba5146100f6575b600080fd5b610064610126565b604051610071919061046b565b60405180910390f35b610094600480360381019061008f9190610411565b61014a565b6040516100a1919061046b565b60405180910390f35b6100c460048036038101906100bf91906103ac565b61018c565b6040516100d1919061046b565b60405180910390f35b6100f460048036038101906100ef91906103d5565b6101bf565b005b610110600480360381019061010b91906103ac565b61036a565b60405161011d9190610486565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528160005260406000206020528060005260406000206000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906102d1906104dd565b919050555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60026020528060005260406000206000915090505481565b60008135905061039181610555565b92915050565b6000813590506103a68161056c565b92915050565b6000602082840312156103be57600080fd5b60006103cc84828501610382565b91505092915050565b600080604083850312156103e857600080fd5b60006103f685828601610382565b925050602061040785828601610382565b9150509250929050565b6000806040838503121561042457600080fd5b600061043285828601610382565b925050602061044385828601610397565b9150509250929050565b610456816104a1565b82525050565b610465816104d3565b82525050565b6000602082019050610480600083018461044d565b92915050565b600060208201905061049b600083018461045c565b92915050565b60006104ac826104b3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006104e8826104d3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561051b5761051a610526565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b61055e816104a1565b811461056957600080fd5b50565b610575816104d3565b811461058057600080fd5b5056fea26469706673582212200721b264098633a5e24f6c89f83aaaf3d80d4382a9d25d68d306d84464a17ed764736f6c63430008020033";
    static readonly abi: ({
        inputs: never[];
        stateMutability: string;
        type: string;
        name?: undefined;
        outputs?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
    })[];
    static createInterface(): MockRegistryInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MockRegistry;
}
