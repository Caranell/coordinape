/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FeeRegistry, FeeRegistryInterface } from "../FeeRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_yield",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_total",
        type: "uint256",
      },
    ],
    name: "getVariableFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setStaticFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "staticFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6106d98061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063231051b4146100675780636a89e82d14610085578063715018a6146100b55780638da5cb5b146100bf578063cebb1818146100dd578063f2fde38b146100f9575b600080fd5b61006f610115565b60405161007c9190610595565b60405180910390f35b61009f600480360381019061009a919061049a565b61011b565b6040516100ac9190610595565b60405180910390f35b6100bd610123565b005b6100c76101ab565b6040516100d4919061053a565b60405180910390f35b6100f760048036038101906100f29190610471565b6101d4565b005b610113600480360381019061010e9190610448565b61025a565b005b60015481565b600092915050565b61012b610352565b73ffffffffffffffffffffffffffffffffffffffff166101496101ab565b73ffffffffffffffffffffffffffffffffffffffff161461019f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019690610575565b60405180910390fd5b6101a9600061035a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101dc610352565b73ffffffffffffffffffffffffffffffffffffffff166101fa6101ab565b73ffffffffffffffffffffffffffffffffffffffff1614610250576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024790610575565b60405180910390fd5b8060018190555050565b610262610352565b73ffffffffffffffffffffffffffffffffffffffff166102806101ab565b73ffffffffffffffffffffffffffffffffffffffff16146102d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cd90610575565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610346576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033d90610555565b60405180910390fd5b61034f8161035a565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061042d81610675565b92915050565b6000813590506104428161068c565b92915050565b60006020828403121561045a57600080fd5b60006104688482850161041e565b91505092915050565b60006020828403121561048357600080fd5b600061049184828501610433565b91505092915050565b600080604083850312156104ad57600080fd5b60006104bb85828601610433565b92505060206104cc85828601610433565b9150509250929050565b6104df816105c1565b82525050565b60006104f26026836105b0565b91506104fd826105fd565b604082019050919050565b60006105156020836105b0565b91506105208261064c565b602082019050919050565b610534816105f3565b82525050565b600060208201905061054f60008301846104d6565b92915050565b6000602082019050818103600083015261056e816104e5565b9050919050565b6000602082019050818103600083015261058e81610508565b9050919050565b60006020820190506105aa600083018461052b565b92915050565b600082825260208201905092915050565b60006105cc826105d3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61067e816105c1565b811461068957600080fd5b50565b610695816105f3565b81146106a057600080fd5b5056fea2646970667358221220ca1ce4cb691703a3e372dd54006345f98bfa026779dd557bcfe4e1a43401cefa64736f6c63430008020033";

export class FeeRegistry__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FeeRegistry> {
    return super.deploy(overrides || {}) as Promise<FeeRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FeeRegistry {
    return super.attach(address) as FeeRegistry;
  }
  connect(signer: Signer): FeeRegistry__factory {
    return super.connect(signer) as FeeRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeRegistryInterface {
    return new utils.Interface(_abi) as FeeRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeRegistry {
    return new Contract(address, _abi, signerOrProvider) as FeeRegistry;
  }
}
